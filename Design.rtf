{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 	Crypto-Source is mainly comprised of HTML and Python. I decided to use Python to implement the RSA algorithm because python is flexible enough to do it and can also run with HTML using flask. The python application itself is just one python file that contains the three functions that Crypto-Source is using for key generation, encryption and decryption. I was originally going to put each of these function in their own python file and then call them from one main python file. This abstraction would have helped to hide some complexity, but I ultimately decided to put all three functions in one file to simplify how much I would have to configure flask. \
	In HTML, I split the application into three different HTML files. One for key generation, one for encryption, and one for decryption. I did this mostly for organization. Also this is the interface the user would interact with and a big goal of this project was that anyone could use it and get something out of it. So organization became pretty important to make sure the user interface was easy to understand and use. }